[tox]
envlist =
    py{310,311,dev}-test{,-alldeps,-oldestdeps,-devdeps,-numpy122,-numpy123,-numpy124,-astropy52}{,-cov}{,-clocale}
    build_docs
    linkcheck
    codestyle
requires =
    setuptools >= 30.3.0
    pip >= 19.3.1
isolated_build = true
indexserver =
    NIGHTLY = https://pypi.anaconda.org/scipy-wheels-nightly/simple

[testenv]
# Pass through the following environment variables which are needed for the CI
passenv = HOME, WINDIR, LC_ALL, LC_CTYPE, CC, CI, IS_CRON, ARCH_ON_CI

# Suppress display of matplotlib plots generated during docs build
setenv =
    NUMPY_WARN_IF_NO_MEM_POLICY = 1
    # For coverage, we need to pass extra options to the C compiler
    cov: CFLAGS = --coverage -fno-inline-functions -O0
    image: MPLFLAGS = -m "mpl_image_compare" --mpl --mpl-generate-summary=html --mpl-results-path={toxinidir}/results --mpl-hash-library={toxinidir}/astropy/tests/figures/{envname}.json --mpl-baseline-path=https://raw.githubusercontent.com/astropy/astropy-figure-tests/astropy-main/figures/{envname}/ --remote-data -W ignore::DeprecationWarning
    !image: MPLFLAGS =
    clocale: LC_CTYPE = C.ascii
    clocale: LC_ALL = C
    devdeps: PIP_EXTRA_INDEX_URL = https://pypi.anaconda.org/scipy-wheels-nightly/simple


# Run the tests in a temporary directory to make sure that we don't import
# this package from the source tree
changedir = .tmp/{envname}

# tox environments are constructed with so-called 'factors' (or terms)
# separated by hyphens, e.g. test-devdeps-cov. Lines below starting with factor:
# will only take effect if that factor is included in the environment name. To
# see a list of example environments that can be run, along with a description,
# run:
#
#     tox -l -v
#
description =
    run tests
    alldeps: with all optional dependencies
    devdeps: with the latest developer version of key dependencies
    oldestdeps: with the oldest supported version of key dependencies
    cov: and test coverage
    image: with image tests
    numpy122: with numpy 1.22.*
    numpy123: with numpy 1.23.*
    numpy124: with numpy 1.24.*
    astropy52: with astropy 5.2.*
    double: twice in a row to check for global state changes

# The following provides some specific pinnings for key packages
deps =
    numpy122: numpy==1.22.*
    numpy123: numpy==1.23.*
    numpy124: numpy==1.24.*

    image: latex
    image: scipy
    image: pytest-mpl

    astropy52: astropy==5.2.*

    # The oldestdeps factor is intended to be used to install the oldest
    # versions of all dependencies that have a minimum version.
    oldestdeps: numpy==1.22.*
    oldestdeps: matplotlib==3.3.*
    oldestdeps: astropy==5.0.*
    oldestdeps: scipy==1.6.1
    oldestdeps: traitlets<4.1

    # The devdeps factor is intended to be used to install the latest developer
    # version or nightly wheel of key dependencies.
    devdeps: numpy>=0.0.dev0
    devdeps: scipy>=0.0.dev0
    devdeps,mpldev: matplotlib>=0.0.dev0
    devdeps: git+https://github.com/astropy/astropy.git#egg=astropy

# The following indicates which extras_require from setup.cfg will be installed
extras =
    test: test
    devdeps: test_all
    alldeps: all
    alldeps: test_all

commands =
    pip freeze
    !cov-!double: pytest --pyargs trackstream {toxinidir}/docs {posargs}
    cov-!double: pytest --pyargs trackstream {toxinidir}/docs --cov trackstream --cov-config={toxinidir}/setup.cfg {posargs}
    double: python -c 'import sys; from trackstream import test; test(); sys.exit(test())'
    cov: coverage xml -o {toxinidir}/coverage.xml

# This lets developers to use tox to build docs and ignores warnings.
# This is not used in CI; For that, we have RTD PR builder.
[testenv:build_docs]
changedir = docs
description = invoke sphinx-build to build the HTML docs
extras = docs
commands =
    pip freeze
    sphinx-build -b html . _build/html {posargs:-j auto}

[testenv:linkcheck]
changedir = docs
description = check the links in the HTML docs
extras = docs
commands =
    pip freeze
    sphinx-build -b linkcheck . _build/html {posargs:-W}

[testenv:codestyle]
skip_install = true
description = Run all style and file checks with pre-commit
deps =
    pre-commit
commands =
    pre-commit install-hooks
    pre-commit run {posargs:--color always --all-files --show-diff-on-failure}
