[project]
  name = "trackstream"
  version = "0.1.0"
  description = "Stellar Stream Tracker"
  readme = "README.rst"
  requires-python = ">=3.9"
  license = {file = "licenses/LICENSE.rst"}
  keywords = ["stellar streams", "astronomy"]
  authors = [
    {name = "Nathaniel Starkman", email = "n.starkman@mail.utoronto.ca"}
  ]
  maintainers = [
    {name = "Nathaniel Starkman", email = "n.starkman@mail.utoronto.ca"}
  ]
  classifiers = [
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Topic :: Scientific/Engineering :: Astronomy",
    "Topic :: Scientific/Engineering :: Physics",
  ]
  dependencies = [
    "astropy>=5.0",
    "galpy>=1.8",
    "bound_class.core @ git+https://github.com/nstarman/bound-class.git",
    "importlib_metadata",
    "interpolated_coordinates  @ git+https://github.com/GalOrrery/interpolated-coordinates.git",
    "matplotlib",
    "numpy>=1.22,<1.24",
    "overload_numpy >= 0.1",
    "override_toformat @ git+https://github.com/nstarman/override_toformat.git",
    "scipy>1.3",
    "typing_extensions>=4.2",
  ]

[project.optional-dependencies]
  all = [
    "tqdm",
  ]
  test = [
    "coverage[toml]",
    "pytest",
    "pytest-astropy",
    "tqdm",
  ]
  docs = [
    "graphviz",
    "IPython",
    "jupyter_client",
    "nbsphinx",
    "palettable",
    "sphinx",
    "sphinx-astropy",
    "sphinxcontrib.bibtex",
    "tomlkit",
    "tqdm",
  ]

[project.urls]
  homepage = "https://trackstream.readthedocs.io"
  repository = "https://github.com/nstarman/trackstream"
  documentation = "https://trackstream.readthedocs.io"


[project.entry-points."trackstream.io.StreamArm.from_format"]
  astropy_table = "trackstream.io.builtin.table:register_StreamArm_from_format"

[project.entry-points."trackstream.stream.mixin"]
  frame_streamarm = "trackstream.frame.stream_mixin:register_StreamArm"


[build-system]
  requires = [
    "extension-helpers",
    "setuptools >= 45",
    "setuptools_scm >= 6.2, < 65.6.0",
    "oldest-supported-numpy",
    "wheel"
  ]

  build-backend = 'setuptools.build_meta'

[tool.setuptools]
  package-dir = {"" = "src"}

[tool.setuptools_scm]


[tool.autopep8]
  max_line_length = 120
  in-place = true
  recursive = true


[tool.black]
  line-length = 120
  include = '\.pyi?$'
  exclude = '''
  /(
      \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  '''


[tool.coverage]

[tool.coverage.run]
  omit = [
    "*/trackstream/_astropy_init*",
    "*/trackstream/conftest.py",
    "*/trackstream/*setup_package*",
    "*/trackstream/tests/*",
    "*/trackstream/*/tests/*",
    "*/trackstream/extern/*",
    "*/trackstream/_version*",
  ]

[tool.coverage.report]
  exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",
    # Don't complain about packages we have installed
    "except ImportError",
    # Don't complain if tests don't hit assertions
    "raise AssertionError",
    "raise NotImplementedError",
    # Don't complain about script hooks
    "'def main(.*):'",
    # Ignore branches that don't pertain to this version of Python
    "pragma: py{ignore_python_version}",
    # Don't complain about IPython completion helper
    "def _ipython_key_completions_",
  ]


[tool.ruff]
target-version = "py39"
line-length = 120
select = ["ALL"]
ignore = [
  "ANN101", "ANN102", "ANN401",
  "D105", "D107", "D203", "D213",
  "N80",
  "PD",
  "PLR2004",
]

[tool.ruff.per-file-ignores]
"docs/conf.py" = ["INP001"]
"src/trackstream/io/core.py" = ["D414"]
"src/trackstream/stream/base.py" = ["N815"]
"test_*.py" = ["ANN", "ARG002", "B027", "D", "N801", "PLR0913", "PT015", "S101", "SLF001"]

[tool.ruff.isort]
force-sort-within-sections = true
known-local-folder = ["trackstream"]


[tool.mypy]
  disallow_untyped_defs = true
  ignore_missing_imports = true
  no_implicit_optional = true
  warn_return_any = true
  warn_redundant_casts = true
  warn_unused_configs = true
  warn_unreachable = true
  exclude = [
    'conftest\.py$',
    "docs/",
    "(^|/)tests/"
  ]

  [[tool.mypy.overrides]]
    module = [
      "conftest.py",
      "docs/*",
      "tests/*",
    ]
    ignore_errors = true


[tool.pytest.ini_options]
  testpaths = ["src/trackstream", "docs"]
  astropy_header = "True"
  doctest_plus = "enabled"
  text_file_format = "rst"
  addopts = "--doctest-rst --ignore-glob=docs/papers_and_presentations/*"
  filterwarnings = [
    # tomlkit
    "ignore:The config value `project' has type `String', defaults to `str'.",
    "ignore:The config value `htmlhelp_basename' has type `String', defaults to `str'.",
    # distutils
    "ignore:distutils Version classes are deprecated. Use packaging.version instead.:DeprecationWarning"
  ]
